#!/bin/bash -x

# print env
env

# move the application source
ls -la /tmp/
#exit 1 # terminate and indicate error


set -o pipefail
IFS=$'\n\t'

source /usr/libexec/s2i/common.sh

export DOCKER_SOCKET=/var/run/docker.sock
export HOME=/tmp
export GIT_COMMITTER_NAME=sterburg
export GIT_COMMITTER_EMAIL=sterburg@redhat.com
export ANSIBLE_CONTAINER=1
##export ANSIBLE_ORCHESTRATED_HOSTS=localhost
export BUILD_DIR=/tmp/src #$(mktemp --directory)
export BUILD_WITH_CONTEXT_DIR="${BUILD_DIR}"
#env
if [ -n "${SOURCE_CONTEXT_DIR}" ]; then
  export BUILD_WITH_CONTEXT_DIR="${BUILD_DIR}/${SOURCE_CONTEXT_DIR}"
fi
#export ANSIBLE_CONTAINER_PATH=/tmp/src

generate_passwd_file

if [ ! -e "${DOCKER_SOCKET}" ]; then
  echo "Docker socket missing at ${DOCKER_SOCKET}"
  exit 1
fi

if [ -n "${OUTPUT_IMAGE}" ]; then
  TAG="${OUTPUT_REGISTRY}/${OUTPUT_IMAGE}"
fi

if [[ "${SOURCE_REPOSITORY}" != "git://"* ]] && [[ "${SOURCE_REPOSITORY}" != "git@"* ]]; then
  URL="${SOURCE_REPOSITORY}"
  if [[ "${URL}" != "http://"* ]] && [[ "${URL}" != "https://"* ]]; then
    URL="https://${URL}"
  fi
  curl --head --silent --fail --location --max-time 16 $URL > /dev/null
  if [ $? != 0 ]; then
    echo "Could not access source url: ${SOURCE_REPOSITORY}"
    exit 1
  fi

  git clone --recursive "${SOURCE_REPOSITORY}" "${BUILD_DIR}"
  if [ $? != 0 ]; then
    echo "Error trying to fetch git source: ${SOURCE_REPOSITORY}"
    exit 1
  fi
  pushd "${BUILD_DIR}"

  if [ -n "${SOURCE_REF}" ]; then
    git checkout "${SOURCE_REF}"
    if [ $? != 0 ]; then
      echo "Error trying to checkout branch: ${SOURCE_REF}"
      exit 1
    fi
  fi
fi

cd "${BUILD_WITH_CONTEXT_DIR}"

if [[ -d /var/run/secrets/openshift.io/push ]] && [[ ! -e ~/.dockercfg ]]; then
  cp /var/run/secrets/openshift.io/push/.dockercfg ~/.dockercfg
fi
pwd
ls -la ./
ansible-container --debug build
#/usr/local/bin/builder.sh /usr/local/bin/ac_galaxy.py bbaassssiiee.base_naxsi
#/usr/local/bin/builder.sh /usr/bin/ansible-playbook -vvv -i /etc/ansible/ansible-container-inventory.py -c docker main.yml

#if [ -n "${OUTPUT_IMAGE}" ] || [ -s "$HOME/.dockercfg" ]; then
#  ansible-container shipit openshift
#  ansible-container push 
#fi
exit 1
